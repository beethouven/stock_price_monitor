name: Daily Test Run  # ✅ Workflow 的名稱，出現在 GitHub Actions 頁面上

on:
  workflow_dispatch:      # 👉 手動觸發（Actions 頁面點「Run workflow」）

  push:                   # 👉 當你有檔案更新（例如 YAML 檔）就觸發
    paths:
      - '.github/workflows/*.yml'

  schedule:               # 👉 每天早上台灣時間 8:30 自動執行
    - cron: '30 0 * * *'  # UTC 時間 00:30 = 台灣時間 08:30

jobs:
  run-test:  # 🧪 Job 名稱（你可以命名為其他用途，例如 run-stock-monitor）

    runs-on: ubuntu-latest  # 🖥 使用 GitHub 提供的 Ubuntu Runner 來執行任務

    steps:  # 🪜 每個步驟依序執行
      - name: Checkout repository
        uses: actions/checkout@v3  # 📦 取得目前 repo 的程式碼，準備執行

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'  # 🐍 設定使用的 Python 版本為 3.10

      - name: Install dependencies
        run: pip install -r requirements.txt  # 📥 安裝套件（你在 requirements.txt 裡定義）

      - name: Run test and generate report
        run: python run_test.py  # 🚀 執行你的主腳本，產生報告與紀錄

      - name: Set timestamp variable
        id: vars
        run: echo "REPORT_PATH=reports/test_report_$(date +'%Y-%m-%d_%H').html" >> $GITHUB_ENV

      - name: Upload HTML report as artifact
        uses: actions/upload-artifact@v4
        with:
          name: test-report
          path: ${{ env.REPORT_PATH }}
          # 📄 artifact 名稱與路徑，使用環境變數來動態設定

      - name: Send report via email
        uses: dawidd6/action-send-mail@v3  # 📧 使用第三方 mail action 套件寄出報告
        with:
          server_address: smtp.gmail.com  # ✉️ SMTP 伺服器地址（例如 Gmail 可用 smtp.gmail.com）
          server_port: 587  # 🔐 通常使用 587 或 465（依服務而定）
          username: ${{ secrets.EMAIL_USERNAME }}  # 👤 登入帳號（從 Secrets 讀取）
          password: ${{ secrets.GMAIL_APP_PASSWORD }}  # 🔑 登入密碼（建議用 App Password 或 OAuth Token）
          subject: Daily Test Report  # 📌 信件主題
          to: ${{ secrets.EMAIL_USERNAME }}  # 📥 收件人信箱
          from: ${{ secrets.EMAIL_USERNAME }}  # 📤 寄件人信箱（可與 username 一致）
          body: "請參閱今日測試報告，HTML 檔案已附加。"  # 📄 信件內容
          attachments: ${{ env.REPORT_PATH }}  # 📎 附加報告檔案

      # 目前不支援 LINE Notify 的直接寄送
      # 如果需要，可以使用 curl 或其他工具來實現
      # - name: Send LINE Notify
      #   run: |
      #     curl -X POST https://notify-api.line.me/api/notify \
      #       -H "Authorization: Bearer ${{ secrets.LINE_NOTIFY_TOKEN }}" \
      #       -F "message=✅ 測試完成！報告已寄出，請查看你的信箱。"  # 🔔 傳送通知訊息到 LINE